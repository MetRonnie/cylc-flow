name: functional tests

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '.github/workflows/*.ya?ml'
      - '!.github/workflows/test_functional.yml'
      - 'cylc/flow/etc/syntax/**'
      - 'etc/syntax/**'
      - 'tests/unit/**'
      - 'tests/integration/**'
      - '**.md'
      - '**/README*/**'
  push:
    branches:
      - master
      - '8.*.x'
    paths-ignore:
      - '.github/workflows/*.ya?ml'
      - '!.github/workflows/test_functional.yml'
      - 'cylc/flow/etc/syntax/**'
      - 'etc/syntax/**'
      - 'tests/unit/**'
      - 'tests/integration/**'
      - '**.md'
      - '**/README*/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name || matrix.chunk }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.7']
        test-base: ['tests/f']
        chunk: ['1/4']
        platform: ['_local_background* _local_at*']
        # NOTE: includes must define ALL of the matrix values
        include:
          # macos
          - name: 'macos 1/5'
            os: 'macos-latest'
            python-version: '3.7'
            test-base: 'tests/f'
            chunk: '1/5'
            platform: '_local_background*'
          - name: 'macos 2/5'
            os: 'macos-latest'
            python-version: '3.7'
            test-base: 'tests/f'
            chunk: '2/5'
            platform: '_local_background*'

    env:
      # Use non-UTC time zone
      TZ: XXX-05:30
      # these vars are used by etc/bin/run-functional-tests
      CYLC_TEST_PLATFORMS: ${{ matrix.platform }}
      CYLC_COVERAGE: 1
      REMOTE_PLATFORM: ${{ contains(matrix.platform, '_remote') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create global config
        run: |
          CONF_PATH="$HOME/.cylc/flow/8"
          mkdir -p "$CONF_PATH"
          touch "$CONF_PATH/global.cylc"
          ln -s "$CONF_PATH/global.cylc" "$CONF_PATH/global-tests.cylc"
          echo "GLOBAL_CFG_PATH=${CONF_PATH}/global.cylc" >> "$GITHUB_ENV"

      - name: Detect DNS problem
        if: startsWith(matrix.os, 'macos')
        id: dns
        uses: MetRonnie/release-actions/detect-dns-problem@dns

      - name: Patch DNS
        if: steps.dns.outputs.problem == 'true'
        run: |
          # see https://github.com/actions/runner-images/issues/8649#issuecomment-1779548056
          echo -e "$(ipconfig getifaddr en0) $(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
          dscacheutil -q host -a name $(hostname -f)
          cat >> "$GLOBAL_CFG_PATH" <<__HERE__
          [platforms]
            [[localhost, $(hostname -f), $(hostname -s)]]
              hosts = localhost
              install target = localhost
              ssh command = ssh -oBatchMode=yes -oConnectTimeout=8 -oStrictHostKeyChecking=no
          __HERE__
          cat "$GLOBAL_CFG_PATH"

      - name: Brew Install
        if: startsWith(matrix.os, 'macos')
        run: |
          # install system deps
          brew update
          brew install bash coreutils gnu-sed

          # add GNU coreutils and sed to the user PATH
          # (see instructions in brew install output)
          echo \
            "$(brew --prefix)/opt/coreutils/libexec/gnubin" \
            >> "${GITHUB_PATH}"
          echo \
            "/usr/local/opt/gnu-sed/libexec/gnubin" \
            >> "${GITHUB_PATH}"

          # add coreutils to the bashrc too (for jobs)
          cat >> "${HOME}/.bashrc" <<__HERE__
          PATH="$(brew --prefix)/opt/coreutils/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
          export PATH
          __HERE__

      - name: Apt-Get Install
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlite3 tree at

      - name: Add .github/bin/ to PATH
        # Sets up mocked mail command & any other custom executables
        run: echo "${{ github.workspace }}/.github/bin" >> $GITHUB_PATH


      - name: Test socket stuff
        shell: python
        run: |
          import socket

          name = socket.gethostname()

          print(f"socket.gethostname()                           \n>>> {name}")
          print("")

          print(f"socket.gethostbyname_ex({name})                \n>>> {socket.gethostbyname_ex(name)}")
          print(f"socket.gethostbyname_ex({name})                \n>>> {socket.gethostbyname_ex(name)}")

          print("")
          print(f"socket.getfqdn()                               \n>>> {socket.getfqdn()}")

          print("")
          print(f"socket.gethostbyname_ex({name})                \n>>> {socket.gethostbyname_ex(name)}")
